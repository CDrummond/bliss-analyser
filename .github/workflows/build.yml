name: Build for all platforms

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  Linux_ffmpeg_x86:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Packages
      run: sudo apt-get update && sudo apt-get install build-essential yasm -y

    - name: Build x86 ffmpeg version
      run: |
        cargo build --release
        strip target/release/bliss-analyser
        mkdir releases
        cp target/release/bliss-analyser releases/bliss-analyser
        cp UserGuide.md releases/README.md
        cp LICENSE releases/
        cp configs/linux.ini releases/config.ini

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-linux-x86-ffmpeg
        path: releases/


  Ubuntu_22.04_libav_x86:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Packages
      run: sudo apt-get update && sudo apt-get install build-essential yasm libavutil-dev libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev libswresample-dev libfftw3-dev ffmpeg -y

    - name: Build 22.04 libav version
      run: |
        cargo build --release --features=libav
        strip target/release/bliss-analyser
        mkdir releases
        cp target/release/bliss-analyser releases/bliss-analyser
        cp UserGuide.md releases/README.md
        cp LICENSE releases/
        cp configs/linux.ini releases/config.ini

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-ubuntu-22.04-x86-libav
        path: releases/


  Ubuntu_24.04_libav_x86:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Packages
      run: sudo apt-get update && sudo apt-get install build-essential yasm libavutil-dev libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev libswresample-dev libfftw3-dev ffmpeg -y

    - name: Build 24.04 libav version
      run: |
        cargo build --release --features=libav
        strip target/release/bliss-analyser
        mkdir releases
        cp target/release/bliss-analyser releases/bliss-analyser
        cp UserGuide.md releases/README.md
        cp LICENSE releases/
        cp configs/linux.ini releases/config.ini

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-ubuntu-24.04-x86-libav
        path: releases/


  Linux_ffmpeg_arm:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build ARM ffmpeg on Debian
      run: |
        docker build -t bliss-analyser-cross - < docker/Dockerfile_Bullseye_ffmpeg
        docker run --rm -v $PWD/target:/build -v $PWD:/src bliss-analyser-cross

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-linux-arm-ffmpeg
        path: releases/


  Debian_libav_arm:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build ARM libav on Bullseye
      run: |
        docker build -t bliss-analyser-cross - < docker/Dockerfile_Bullseye_libav
        docker run --rm -v $PWD/target:/build -v $PWD:/src bliss-analyser-cross

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-debian-bullseye-arm-libav
        path: releases/

    - name: Build ARM libav on Bookworm
      run : |
        docker build -t bliss-analyser-cross - < docker/Dockerfile_Bookworm_libav
        docker run --rm -v $PWD/target:/build -v $PWD:/src bliss-analyser-cross

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-debian-bookworm-arm-libav
        path: releases/


  macOS:
    runs-on: macos-13

    steps:
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Rust support for ARM64 & prepare environment
      run: |
        rustup target add aarch64-apple-darwin
        mkdir releases

    - name: Build
      run: |
        cargo build --release
        strip target/release/bliss-analyser
        cp target/release/bliss-analyser releases/bliss-analyser-x86_64
        cargo build --target=aarch64-apple-darwin --release
        strip target/aarch64-apple-darwin/release/bliss-analyser
        cp target/aarch64-apple-darwin/release/bliss-analyser releases/bliss-analyser-arm64

    - name: Build fat binary
      run: |
        lipo -create \
          -arch x86_64 releases/bliss-analyser-x86_64 \
          -arch arm64 releases/bliss-analyser-arm64 \
          -output releases/bliss-analyser

    - name: Remove ununsed binaries
      run:
        rm releases/bliss-analyser-x86_64 releases/bliss-analyser-arm64

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-mac-ffmpeg
        path: releases/


  Windows:
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install deps
      run: |
        $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
        Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
        Invoke-WebRequest "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z" -OutFile ffmpeg-shared.7z
        7z x ffmpeg-shared.7z
        mkdir deps
        mv ffmpeg-*/* deps/
        Add-Content $env:GITHUB_ENV "FFMPEG_DIR=${pwd}\deps`n"
        Add-Content $env:GITHUB_PATH "${pwd}\deps\bin`n"

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Build
      run: |
        cargo build --release --features=libav
        mkdir releases
        cp target/release/bliss-analyser.exe releases/bliss-analyser.exe
        cp deps/bin/*.dll releases/
        cp UserGuide.md releases/README.md
        cp LICENSE releases/
        cp configs/windows.ini releases/config.ini
        cp c:\Windows\system32\vcruntime140.dll releases

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bliss-analyser-windows-libav
        path: releases/
